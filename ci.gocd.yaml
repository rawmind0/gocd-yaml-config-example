environments:
  docker-base:
    environment_variables:
      DEPLOYMENT: docker-base
      DOCKER_USER: rawmind
      REPO: ${source}
    pipelines:
      - alpine-base
      - alpine-tools
pipelines:
  alpine-base:
    group: docker-base
    materials:
      source:  # this is the name of material
        # says about type of material and url at once
        git: https://github.com/rawmind0/alpine-base.git
    stages:
      - build: # name of stage
          fetch_materials: yes
          keep_artifacts: no
          clean_workspace: yes
          jobs:
            build: # name of the job
              artifacts:
                - build:
                    source: ci/build_version
                    destination: ci
                - build:
                    source: ci/docker_image
                    destination: ci
              tasks:
                - exec: # indicates type of task
                    command: bash 
                    arguments:
                      - "ci/build.sh"
      - test: # name of stage
          fetch_materials: no
          keep_artifacts: no
          clean_workspace: no
          jobs:
            test: # name of the job
              tasks:
                - fetch:
                    pipeline: alpine-base
                    stage: build
                    job: build
                    is_file: yes
                    source: ci/build_version
                    destination: ci
                - fetch:
                    pipeline: alpine-base
                    stage: build
                    job: build
                    is_file: yes
                    source: ci/docker_image
                    destination: ci
                - exec: # indicates type of task
                    command: bash 
                    arguments:
                      - "ci/test.sh"
                      - "ci/build_version"
      - release: # name of stage
          fetch_materials: no
          keep_artifacts: no
          clean_workspace: no
          jobs:
            release: # name of the job
              artifacts:
                - build:
                    source: ci/build_version
                    destination: ci
              tasks:
                - fetch:
                    pipeline: alpine-base
                    stage: build
                    job: build
                    is_file: yes
                    source: ci/build_version
                    destination: ci
                - fetch:
                    pipeline: alpine-base
                    stage: build
                    job: build
                    is_file: yes
                    source: ci/docker_image
                    destination: ci
                - exec: # indicates type of task
                    command: bash 
                    arguments:
                      - "ci/release.sh"
                      - "ci/build_version"
  alpine-tools: # definition of yaml-example pipeline
    group: docker-base
    materials:
      mygit: # this is the name of material
        # keyword git says about type of material and url at once
        git: https://x-access-token:${source}@github.com/rawmind0/alpine-tools.git
      upstream:
        # type is optional here, material type is implied based on presence of pipeline and stage fields
        # type: dependency
        pipeline: alpine-base
        stage: release
    stages: # list of stages in order
      - build: # name of stage
          fetch_materials: yes
          keep_artifacts: no
          clean_workspace: no
          jobs:
            build: # name of the job
              artifacts:
                - build:
                    source: ci/build_version
                    destination: ci
              tasks:
                - fetch:
                    pipeline: alpine-base
                    stage: release
                    job: release
                    is_file: yes
                    source: ci/build_version
                    destination: ci
                - exec: # indicates type of task
                    command: bash 
                    arguments:
                      - "ci/build.sh"
